var Main={data:()=>({downloading:!1,pretty_json:!0,drawer:!1,options:"",encoding:"",docs:"",current_template:"",crawler_rule:{name:"",regex:"^https://httpbin.org/html$",parse_rules:[{name:"title",chain_rules:[["css","title,h1","$text"],["py","index","0"]],child_rules:"[]",iter_parse_child:!1}],request_args:JSON.stringify({method:"get",url:"https://httpbin.org/html",headers:{"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36"}},null,2)},input_object:"",request_status:"",parse_result:"",current_doc:"",doc_drawer:!1,new_rule_visible:!1,new_rule_json:"",parse_rules_to_be_send:[],send_child_rule_visible:!1,template_visible:!1,request_template_values:{}}),methods:{querySearch(e,r){var t=this.options;r(e?t.filter(this.createFilter(e)):t)},createFilter:e=>r=>0===r.value.toLowerCase().indexOf(e.toLowerCase()),openAlert(e,r){this.$alert(e,r,{confirmButtonText:"Ok",distinguishCancelAndClose:!0,closeOnPressEscape:!0,closeOnClickModal:!0})},download(){var e=this.current_crawler_rule_json;this.downloading=!0,this.request_status="(Downloading)",this.input_object="",this.$http.post("request",e).then(e=>{let r=e.body.text;if(this.input_object=r.replace(/^\s+/,""),!this.crawler_rule.name){let e="U-"+(new Date).getTime().toString().slice(0,-3);try{var t=(new DOMParser).parseFromString(r,"text/html");let s=(t.getElementsByTagName("title")[0]||t.getElementsByTagName("h1")[0]||t.getElementsByTagName("h2")[0]||"").innerText,l=(s=s.replace(/-.*/g,""))||this.crawler_rule.request_args.url||e;this.crawler_rule.name=l}catch(r){this.crawler_rule.name=e}}this.request_status=e.body.status;let s=e.body.ok?"green":"red";document.querySelector("#request_status>label").style.color=s,this.downloading=!1},e=>{this.status="testTask failed, Bad request ("+e.status+") :"+e.statusText,this.status_icon_flag="error",this.downloading=!1,this.openAlert(this.status)})},parse(){var e={rule:this.current_crawler_rule_json,input_object:this.input_object};this.crawler_rule.parse_rules&&this.input_object?this.$http.post("parse",JSON.stringify(e)).then(e=>{this.parse_result=e.body,this.drawer=!0},e=>{this.status="testTask failed, Bad request ("+e.status+") :"+e.statusText,this.status_icon_flag="error"}):this.openAlert("Send request and fill the parse_rules before parsing")},add_new_rule_chain(e){this.crawler_rule.parse_rules[e].chain_rules.push(["","",""])},add_new_rule(){this.crawler_rule.parse_rules.push({name:"",chain_rules:[["","",""]],child_rules:"",iter_parse_child:!1})},send_child(e){this.send_child_rule_visible=!1;let r=JSON.parse(e.rule.child_rules||"[]"),t=this.crawler_rule.parse_rules[e.sender_index];t.child_rules=JSON.parse(t.child_rules||"[]"),r.push(t),this.crawler_rule.parse_rules[e.receiver_index].child_rules=JSON.stringify(r),this.crawler_rule.parse_rules.splice(e.sender_index,1)[0],this.parse_rules_to_be_send=[],setTimeout(()=>{for(const e of document.getElementsByTagName(".child-rules-input>textarea"))e.style.height="auto",e.style.height=e.scrollHeight+"px";this.iframe_loaded=!0},0)},open_send_child_dialog(e){this.parse_rules_to_be_send=[],this.crawler_rule.parse_rules.forEach((r,t)=>{t!=e&&this.parse_rules_to_be_send.push({rule:r,receiver_index:t,sender_index:e})}),this.send_child_rule_visible=!0},del_rule(e){this.crawler_rule.parse_rules.splice(e,1)},del_rule_chain(e,r){this.crawler_rule.parse_rules[e].chain_rules.splice(r,1)},get_doc(e){this.current_doc=this.docs[e]||"Not found parser: "+e,this.doc_drawer=!0},load_rule(){if(this.new_rule_json)try{var e=JSON.parse(this.new_rule_json);e.request_args&&e.request_args.url&&(e.request_args=JSON.stringify(e.request_args,null,2)),e.request_template&&(e.request_template=JSON.stringify(e.request_template,null,2)),e.parse_rules.forEach(e=>{e.child_rules&&(e.child_rules=JSON.stringify(e.child_rules))}),this.crawler_rule=e,this.new_rule_visible=!1}catch(e){alert(e)}else this.new_rule_visible=!1},load_rule_popup(){this.new_rule_visible=!0,setTimeout(()=>{this.$refs.load_json_input.focus()},0),this.new_rule_json||(this.new_rule_json=this.current_crawler_rule_json)},show_request_template(){this.template_visible=!0,this.current_template=this.crawler_rule.request_template||this.crawler_rule.request_args,this.request_template_values={}},update_template(){try{JSON.parse(this.current_template),this.$set(this.crawler_rule,"request_template",this.current_template)}catch(e){this.openAlert(e,"Error")}},add_to_request_args(){try{new Set(this.current_template.match(/\$\{.*?\}/g)).forEach(e=>{if(!this.request_template_values[e])throw e+" should not be null"});let e=this.current_template;Object.keys(this.request_template_values).forEach(r=>{let t=0;for(;t<1e3;){t+=1;let s=e.replace(r,this.request_template_values[r]);if(s==e)break;e=s}}),this.$set(this.crawler_rule,"request_args",JSON.stringify(JSON.parse(e),null,2)),this.template_visible=!1}catch(e){this.openAlert(e,"Error"),this.template_visible=!0}},input_curl(){this.$prompt("Input cURL string (or URL)","",{confirmButtonText:"OK",cancelButtonText:"Cancel",inputPattern:/^(curl |http).*/,inputErrorMessage:"cURL string should start with curl, or url should start with http"}).then(({value:e})=>{this.$http.post("curl_parse",e).then(e=>{let r=e.body;if(r.ok){this.crawler_rule.request_args=JSON.stringify(r.result,null,2);let e=r.result.url;e&&(this.crawler_rule.regex="^"+e.replace(/([\.\?\+\*\^\$])/g,"\\$1")+"$")}else this.$message({type:"error",message:"cURL parse failed: "+r.result})},()=>{this.$message({type:"error",message:"cURL parse failed"})})}).catch(()=>{})}},watch:{encoding(){let e=JSON.parse(this.crawler_rule.request_args);e.encoding=this.encoding,this.crawler_rule.request_args=JSON.stringify(e,null,2)}},computed:{current_request_url:function(){try{return JSON.parse(this.crawler_rule.request_args).url||""}catch(e){return""}},current_crawler_rule_json:function(){try{var e=[];this.crawler_rule.parse_rules.forEach(r=>{if(r.name){try{var t=JSON.parse(r.child_rules||"[]")}catch(e){t=r.child_rules}var s=[];r.chain_rules.forEach(e=>{e[0]&&e[1]&&s.push([e[0],e[1],e[2]])}),e.push({name:r.name,chain_rules:s,child_rules:t,iter_parse_child:r.iter_parse_child})}});var r={name:this.crawler_rule.name,request_args:JSON.parse(this.crawler_rule.request_args),parse_rules:e,regex:this.crawler_rule.regex};return this.crawler_rule.request_template&&(r.request_template=JSON.parse(this.crawler_rule.request_template)),this.crawler_rule.request_args=JSON.stringify(r.request_args,null,2),this.pretty_json?JSON.stringify(r,null,2):JSON.stringify(r)}catch(e){return e}}}};function init_app(e){e.add_new_rule();let r=document.getElementById("init_vars"),t=JSON.parse(window.atob(r.innerHTML));console.log(t),Object.keys(t).forEach(r=>{e[r]=t[r]}),r.parentNode.removeChild(r),new ClipboardJS(".cp-button").on("success",function(){e.$message({message:"Copy success",type:"success"})})}var vue_app=Vue.extend(Main),app=new vue_app({delimiters:["${","}"]}).$mount("#app");init_app(app);
